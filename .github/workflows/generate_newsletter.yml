name: G√©n√©ration et D√©ploiement de Newsletter

on:
  workflow_dispatch:     # Permet le d√©clenchement manuel
  schedule:
    - cron: '0 8 * * 5'  # Tous les vendredis √† 9h00

permissions:
  contents: write
  pages: write
  id-token: write

jobs:

  generate-and-deploy-newsletter:
    runs-on: ubuntu-latest
    
    steps:
    - name: Configure Git
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"

    - name: Clone newsletter-portfolio
      run: |
        git clone https://${{ secrets.DEPLOY_TOKEN }}@github.com/SiaSia-dev/newsletter-portfolio.git
        cd newsletter-portfolio
        git checkout gh-pages
    
    - name: Clone PORTFOLIO
      run: |
        git clone https://${{ secrets.DEPLOY_TOKEN }}@github.com/SiaSia-dev/PORTFOLIO.git
    
    - name: Clone portfolio-automation
      run: |
        git clone https://${{ secrets.DEPLOY_TOKEN }}@github.com/SiaSia-dev/portfolio-automation.git
    
    - name: Configuration de Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Installation des d√©pendances
      run: |
        python -m pip install --upgrade pip
        pip install PyYAML markdown beautifulsoup4 requests
    
    # Ajout: Pr√©paration des r√©pertoires de suivi
    - name: Pr√©paration des r√©pertoires de suivi
      run: |
        mkdir -p ${{ github.workspace }}/tracking
        # Copier les fichiers de suivi existants s'ils existent
        if [ -f "${{ github.workspace }}/portfolio-automation/scripts/processed_files.txt" ]; then
          cp ${{ github.workspace }}/portfolio-automation/scripts/processed_files.txt ${{ github.workspace }}/tracking/
        fi
        if [ -f "${{ github.workspace }}/portfolio-automation/scripts/last_scan_files.txt" ]; then
          cp ${{ github.workspace }}/portfolio-automation/scripts/last_scan_files.txt ${{ github.workspace }}/tracking/
        fi
    
    - name: G√©n√©rer la newsletter
      run: |
        cd portfolio-automation
        python scripts/newsletter_generator.py
      env:
        PORTFOLIO_DIR: ${{ github.workspace }}/PORTFOLIO
        OUTPUT_DIR: ${{ github.workspace }}/newsletter-portfolio
        TRACKING_DIR: ${{ github.workspace }}/tracking
        CREATE_INDEX: true
        CREATE_LATEST: true
        CREATE_ARCHIVES: true

    - name: Commit et pousse les images mises √† jour
      run: |
        cd newsletter-portfolio
        git config --local user.email "github-actions@github.com"
        git config --local user.name "GitHub Actions"
        git add img/
        git commit -m "Mise √† jour des images de la newsletter"
        git push origin gh-pages
    
    - name: Sauvegarde des fichiers de suivi
      run: |
        if [ -f "${{ github.workspace }}/tracking/processed_files.txt" ]; then
          cp ${{ github.workspace }}/tracking/processed_files.txt ${{ github.workspace }}/portfolio-automation/scripts/
        fi
        if [ -f "${{ github.workspace }}/tracking/last_scan_files.txt" ]; then
          cp ${{ github.workspace }}/tracking/last_scan_files.txt ${{ github.workspace }}/portfolio-automation/scripts/
        fi
        cd portfolio-automation
        git config user.name "GitHub Actions"
        git config user.email "github-actions@github.com"
        git add scripts/processed_files.txt scripts/last_scan_files.txt || true
        git commit -m "Mise √† jour des fichiers de suivi" || echo "Pas de changements dans les fichiers de suivi"
        git push origin main || echo "Pas de push n√©cessaire"

    - name: Pr√©parer le d√©ploiement
      run: |
        cd newsletter-portfolio
        git config user.name "GitHub Actions"
        git config user.email "github-actions@github.com"
        git add .
        git commit -m "Mise √† jour newsletter" || echo "Pas de changements"
        git push origin gh-pages
    
    - name: Notification par email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{ secrets.MAIL_SERVER }}
        server_port: ${{ secrets.MAIL_PORT }}
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: üîî Newsletter Portfolio g√©n√©r√©e - √Ä v√©rifier
        body: |
          Bonjour,
          
          La newsletter de cette semaine a √©t√© g√©n√©r√©e et est pr√™te pour votre validation.
          
          URL de pr√©visualisation: https://siasia-dev.github.io/newsletter-portfolio/latest.html
          
          Bonne journ√©e !
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: Newsletter Portfolio <${{ secrets.MAIL_USERNAME }}>